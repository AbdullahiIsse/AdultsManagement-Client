@page "/Edit/{Id:int}"
@using DNP_Assignment.Data
@using Models
@inject IAdultData AdultData
@inject NavigationManager navMan;

<h3>Edit Adult with id: @Id</h3>

@if (adultToEdit == null)
{
    <em>Adult not found!</em>
}
else
{
    <EditForm Model="@adultToEdit" OnValidSubmit="@Save">
        <DataAnnotationsValidator/> <ValidationSummary/>
        <div class="form-group"> User Id:<br/> <InputNumber @bind-Value="adultToEdit.Id"/> </div>
        <div class="form-group"> Firstname:<br/> <InputText rows="4" @bind-Value="adultToEdit.FirstName"/> </div>
        <div class="form-group"> Lastname:<br/> <InputText rows="4" @bind-Value="adultToEdit.LastName"/> </div>
        <div class="form-group"> Haircolor:<br/> <InputText rows="4" @bind-Value="adultToEdit.HairColor"/> </div>
        <div class="form-group"> Eyecolor:<br/> <InputText rows="4" @bind-Value="adultToEdit.EyeColor"/> </div>
        <div class="form-group"> Age:<br/> <InputNumber rows="4" @bind-Value="adultToEdit.Age"/> </div>
        <div class="form-group"> Weight:<br/> <InputNumber rows="4" @bind-Value="adultToEdit.Weight"/> </div>
        <div class="form-group"> Height:<br/> <InputNumber rows="4" @bind-Value="adultToEdit.Height"/> </div>
        <div class="form-group">
            Sex:<br/>
            <InputSelect @bind-Value="adultToEdit.Sex">
                <option value="">Select sex ...</option>
                <option value="M">Male</option>
                <option value="F">Female</option>
            </InputSelect>
        </div>
        <div class="form-group"> Jobtitle:<br/> <InputTextArea rows="4" @bind-Value="job.JobTitle"/> </div>
        <div class="form-group"> Salary:<br/> <InputNumber rows="4" @bind-Value="job.Salary"/> </div>

        <p class="actions">
            <button class="btn btn-outline-dark" type="submit">Save</button>
        </p>
    </EditForm>
}

@code {

    [Parameter]
    public int Id { get; set; }

    private Job job = new Job();

    private Adult adultToEdit;

    protected override async Task OnInitializedAsync()
    {
        adultToEdit = await AdultData.Get(Id);
        adultToEdit.JobTitle = job;
    }

    private void Save()
    {
        AdultData.Update(adultToEdit);
        navMan.NavigateTo("/adults",true);
    }








}